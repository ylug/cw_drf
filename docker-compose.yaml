version: '3'

services:
  db:
    restart: always
    image: postgres:14.7-alpine
    env_file:
      - .env
    expose:
      - '5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    tty: true
    command: >
      bash -c "python manage.py makemigrations
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    expose:
      - '8000'
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:alpine
    expose:
      - '6379'


  celery:
    build: .
    tty: true
    command: >
      bash -c "celery -A config worker --beat --loglevel=info"
    depends_on:
      - app
      - redis

volumes:
  postgres_data:
